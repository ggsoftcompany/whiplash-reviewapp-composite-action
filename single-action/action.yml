name: 'Whiplash Heroku Primary Review App Deploy'
description: 'Composite action to help Whiplash review app deployment. It will deploy the primary Review App.'
inputs:
  github-access-key:
    description: 'Github access token'
    required: true
    default: ''
  api-key:
    description: 'Your Heroku API key'
    required: true
    default: ''
  pipeline-name:
    description: 'The name of the pipeline to deploy review app for'
    required: true
    default: ''
  app-name-prefix:
    description: 'The prefix used to generate review app name. This should be the same as what you specified for the review app URL pattern in Heroku Dashboard'
    required: true
    default: ''
  app-environment-values:
    description: 'JSON string with environment values to include in the configuration of the Review APP. (Optional)'
    required: false
    default: ''
  secondary-app-name-prefix:
    description: 'The prefix used to generate the name of the secondary review app. This should be the same as what you specified for the review app URL pattern in Heroku Dashboard'
    required: true
    default: ''
  secondary-app-repository:
    description: 'The full name of the repository where the source code of the secondary app is located.(owner/repo)'
    required: true
    default: ''
  secondary-app-source-branch:
    description: 'The name of the branch to use to create the secondary review app.'
    required: true
    default: ''
  secondary-app-pipeline-name:
    description: 'The name of the pipeline to deploy the secondary review app for'
    required: true
    default: ''
  secondary-app-environment-values:
    description: 'JSON string with environment values to include in the configuration of the secondary review app. (Optional)'
    required: false
    default: ''
outputs:
  app-url:
    description: "The URL of the primary Review App"
    value: ${{ steps.set-outputs.outputs.app-url }}
  secondary-app-url:
    description: "The URL of the secondary Review App"
    value: ${{ steps.set-outputs.outputs.secondary-app-url }}
runs:
  using: "composite"
  steps:
    - name: Generate review app name and url
      run: |
        # Generate review app name and url
        $appName = "${{inputs.app-name-prefix}}-pr-${{ github.event.number }}"
        $url = "https://$appName.herokuapp.com"
        echo "APP_NAME=$appName" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "APP_URL=$url" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        write-output "The name for the review app was generated using the fallowing format: {app-name-prefix}-pr-{pull-request-number}."
        write-output " APP NAME: $appName"
        write-output " APP URL: $url"
      shell: powershell

    - name: Generate secondary review app name and url
      run: |
        # Generate secondary review app name and url
        $tmpBranchName = 'tmp-${{github.event.number}}'
        $appName = "${{inputs.secondary-app-name-prefix}}-br-$tmpBranchName"
        $url = "https://$appName.herokuapp.com"

        echo "SECONDARY_APP_NAME=$appName" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "SECONDARY_APP_URL=$url" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "SECONDARY_APP_TMP_BRANCH_NAME=$tmpBranchName" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        write-output "The name for the secondary review app was generated using the fallowing format: {secondary-app-name-prefix}-br-tmp-{pull-request-number}."
        write-output " SECONDARY APP NAME: $appName"
        write-output " SECONDARY APP URL: $url"
        write-output " SECONDARY APP TMP BRANCH NAME: $tmpBranchName"
      shell: powershell

    - name: Create review app
      if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
      run: |
        # Create review app
        ${{ github.action_path }}/../primary-ra-composite-action/scripts/create.ps1 `
        -workingDirectoryPath '${{github.workspace}}' `
        -herokuApiKey '${{inputs.api-key}}' `
        -herokuPipelineName '${{inputs.pipeline-name}}' `
        -githubAccessToken '${{inputs.github-access-key}}' `
        -githubRepositoryFullName '${{github.repository}}' `
        -githubFullBranchName '${{github.ref}}' `
        -pullRequestNumber '${{github.event.number}}' `
        -sourceCodeVersion '${{github.sha}}' `
        -reviewAppURL '${{env.APP_URL}}' `
        -environmentValues '${{inputs.app-environment-values}}' `
        -secondaryReviewAppURL '${{env.SECONDARY_APP_URL}}'
      shell: powershell

    - name: Create secondary review app
      if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
      run: |
        # Create secondary review app
        ${{ github.action_path }}/../secondary-ra-composite-action/scripts/create.ps1 `
        -workingDirectoryPath '${{github.workspace}}' `
        -herokuApiKey '${{inputs.api-key}}' `
        -herokuPipelineName '${{inputs.secondary-app-pipeline-name}}' `
        -githubAccessToken '${{inputs.github-access-key}}' `
        -githubRepositoryFullName '${{inputs.secondary-app-repository}}' `
        -githubDefaultBranch '${{inputs.secondary-app-source-branch}}' `
        -reviewAppURL '${{ env.SECONDARY_APP_URL }}' `
        -pullRequestNumber '${{github.event.number}}' `
        -primaryReviewAppURL '${{env.APP_URL}}' `
        -environmentValues '${{inputs.secondary-app-environment-values}}' `
        -githubNewBranchPrefix 'tmp-'
      shell: powershell

    - id: set-outputs
      name: Set outputs
      run: |
        # Set outputs
        echo "app-url=${{env.APP_URL}}" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        echo "secondary-app-url=${{env.SECONDARY_APP_URL}}" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
      shell: powershell

    - name: Delete primary review App
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
      run: |
        # Delete primary review App
        ${{ github.action_path }}/../delete-review-app/scripts/delete.ps1 `
                  -herokuApiKey '${{inputs.api-key}}' `
                  -appName '${{env.APP_NAME}}'
      shell: powershell

    - name: Delete secondary review App and dependencies
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
      run: |
        # Delete secondary review and dependencies
        ${{ github.action_path }}/../delete-review-app/scripts/delete.ps1 `
                  -herokuApiKey '${{inputs.api-key}}' `
                  -appName '${{env.SECONDARY_APP_NAME}}'

        # removing temporary branch was created for secondary review app
        # todo: move this to a separate step. the create secondary app script will need to be refactored to accept
        # target branch name as parameter
        $targetBranchName = '${{env.SECONDARY_APP_TMP_BRANCH_NAME}}'
        Write-Output "Verify if exists a branch with name: $targetBranchName ..."
        $repositoryName =  ('${{inputs.secondary-app-repository}}'.split('/'))[1]
        git clone "https://user:${{inputs.github-access-key}}@github.com/${{inputs.secondary-app-repository}}.git"
        cd $repositoryName
        if((git ls-remote --heads origin  $targetBranchName)){
            Write-Output "Branch: '$targetBranchName' found. Removing it ..."
            git push origin --delete $targetBranchName
            Write-Output "Branch: '$targetBranchName' removed."
        }
        else{
          Write-Output "Branch: '$targetBranchName' not found. No action needed."
        }
      shell: powershell
